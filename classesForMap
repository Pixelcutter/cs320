ACTIVECOLOR = pygame.Color('lightskyblue3') #sets the color of the active (selected) box
PASSIVECOLOR = pygame.Color('chartreuse4') #sets the color of the inactive boxes

class TextBox:
    def __init__(self, x, y, w, h, text=''):
        self.Rect = pygame.Rect(x, y, w, h)
        self.color = passiveColor
        self.text = text
        self.textSurface = baseFont.render(text, True, (255, 255, 255))
        self.active = False

    def eventHandler(self, event):
        if event.type == pygame.MOUSEBUTTONDOWN:
            if textBox.collidepoint(event.pos):
                self.active = True
            else:
                self.active = False
            self.color = ACTIVECOLOR if self.active else PASSIVECOLOR

        if event.type == pg.KEYDOWN:
                if self.active:
                    elif event.key == pg.K_BACKSPACE:
                        self.text = self.text[:-1]
                    else:
                        self.text += event.unicode
                    # Re-render the text.
                    self.txt_surface = FONT.render(self.text, True, self.color)

    def update(self):
        self.w = max(100, textSurface.get_wdith()+10)

    def draw(self, screen):
        # Blit the text.
        screen.blit(self.txt_surface, (self.rect.x+5, self.rect.y+5))
        # Blit the rect.
        pg.draw.rect(screen, self.color, self.rect, 2)
